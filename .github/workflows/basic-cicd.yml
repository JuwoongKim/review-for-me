## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
## This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
#
#name: BASIC CI/CD
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#env:
#  RESOURCE_PATH: ./src/main/resources/application-dev.yml
#  JAVA_VERSION: 17
#  JAVA_DISTRIBUTION: 'temurin'
#  PROJECT_NAME: review_service
#  BUCKET_NAME: review-service-cicid-bucket
#  CODE_DEPLOY_APP_NAME: review-cicd
#  DEPLOYMENT_GROUP_NAME: review-instance
#
#jobs:
#  build-deploy:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: ${{ env.JAVA_VERSION }}
#        distribution: ${{ env.JAVA_DISTRIBUTION }}
#
#    - name: Set yml file
#      uses: microsoft/variable-substitution@v1
#      with:
#        files: ${{ env.RESOURCE_PATH }}
#      env:
#        spring.datasource.url: ${{ secrets.MYSQL_DB_URL }}
#        spring.datasource.username: ${{ secrets.MYSQL_DB_NAME }}
#        spring.datasource.password: ${{ secrets.MYSQL_DB_PASSWORD }}
#
#    - name: Make gradlew executable
#      run: chmod +x ./gradlew
#
#    - name: Build with gradle
#      run:  ./gradlew clean build
#
#    - name: Make Zip File
#      run: zip -qq -r ./$GITHUB_SHA.zip .
#      shell: bash
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
#        aws-region: ap-northeast-2
#
#    - name: Upload to S3
#      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
#
#    - name: Code Deploy To EC2 instance
#      run: aws deploy create-deployment
#        --application-name $CODE_DEPLOY_APP_NAME
#        --deployment-config-name CodeDeployDefault.AllAtOnce
#        --deployment-group-name $DEPLOYMENT_GROUP_NAME
#        --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
